<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>AlumNet - Admin Panel</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.1/flowbite.min.css" rel="stylesheet" />
  <style>
    body { font-family: 'Plus Jakarta Sans', sans-serif; }
    .gradient-bg { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); }
  </style>
</head>

<body class="bg-gray-50 min-h-screen">
  <%- include("partials/header.ejs") %>

  <div class="max-w-7xl mx-auto px-4 py-8">
    <!-- Admin Header -->
    <div class="mb-8">
      <div class="gradient-bg rounded-xl p-6 text-white">
        <h1 class="text-3xl font-bold mb-2">Admin Dashboard</h1>
        <p class="text-blue-100">Manage your AlumNet platform</p>
      </div>
    </div>

    <!-- Stats Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
      <div class="bg-white rounded-xl shadow-lg p-6">
        <div class="flex items-center">
          <div class="p-3 bg-blue-100 rounded-full">
            <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
            </svg>
          </div>
          <div class="ml-4">
            <h3 class="text-lg font-semibold text-gray-900">Total Users</h3>
            <p class="text-2xl font-bold text-blue-600"><%= stats.totalUsers || 0 %></p>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-lg p-6">
        <div class="flex items-center">
          <div class="p-3 bg-green-100 rounded-full">
            <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"></path>
            </svg>
          </div>
          <div class="ml-4">
            <h3 class="text-lg font-semibold text-gray-900">News Posts</h3>
            <p class="text-2xl font-bold text-green-600"><%= stats.totalPosts || 0 %></p>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-lg p-6">
        <div class="flex items-center">
          <div class="p-3 bg-purple-100 rounded-full">
            <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
            </svg>
          </div>
          <div class="ml-4">
            <h3 class="text-lg font-semibold text-gray-900">Comments</h3>
            <p class="text-2xl font-bold text-purple-600"><%= stats.totalComments || 0 %></p>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-lg p-6">
        <div class="flex items-center">
          <div class="p-3 bg-yellow-100 rounded-full">
            <svg class="w-6 h-6 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
            </svg>
          </div>
          <div class="ml-4">
            <h3 class="text-lg font-semibold text-gray-900">Activities</h3>
            <p class="text-2xl font-bold text-yellow-600"><%= stats.totalActivities || 0 %></p>
          </div>
        </div>
      </div>
    </div>

    <!-- Management Tabs -->
    <div class="bg-white rounded-xl shadow-lg overflow-hidden">
      <div class="border-b border-gray-200">
        <nav class="-mb-px flex space-x-8" aria-label="Tabs">
          <button onclick="showTab('users')" id="users-tab" class="tab-button active border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm">
            Users Management
          </button>
          <button onclick="showTab('posts')" id="posts-tab" class="tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm">
            Posts Management
          </button>
          <button onclick="showTab('comments')" id="comments-tab" class="tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm">
            Comments Management
          </button>
          <button onclick="showTab('settings')" id="settings-tab" class="tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm">
            Settings
          </button>
        </nav>
      </div>

      <!-- Users Management Tab -->
      <div id="users-content" class="tab-content p-6">
        <div class="flex justify-between items-center mb-6">
          <h2 class="text-xl font-bold text-gray-900">Users Management</h2>
          <button onclick="openAddUserModal()" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition duration-300 flex items-center space-x-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
            </svg>
            <span>Add User</span>
          </button>
        </div>

        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Joined</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <% if (users && users.length > 0) { %>
                <% users.forEach(user => { %>
                  <tr>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <div class="flex items-center">
                        <div class="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold">
                          <%= (user.full_name || user.username || 'U').charAt(0).toUpperCase() %>
                        </div>
                        <div class="ml-4">
                          <div class="text-sm font-medium text-gray-900"><%= user.full_name || user.username %></div>
                          <div class="text-sm text-gray-500">@<%= user.username %></div>
                        </div>
                      </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= user.email %></td>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                        <%= user.role || 'User' %>
                      </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      <%= user.created_at ? new Date(user.created_at).toLocaleDateString() : 'N/A' %>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                      <button onclick="editUser('<%= user.user_id %>')" class="text-indigo-600 hover:text-indigo-900 mr-3">Edit</button>
                      <button onclick="deleteUser('<%= user.user_id %>')" class="text-red-600 hover:text-red-900">Delete</button>
                    </td>
                  </tr>
                <% }) %>
              <% } else { %>
                <tr>
                  <td colspan="5" class="px-6 py-4 text-center text-gray-500">No users found</td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>

      <!-- Posts Management Tab -->
      <div id="posts-content" class="tab-content p-6 hidden">
        <div class="flex justify-between items-center mb-6">
          <h2 class="text-xl font-bold text-gray-900">Posts Management</h2>
        </div>

        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Title</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Author</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Category</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Created</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <% if (posts && posts.length > 0) { %>
                <% posts.forEach(post => { %>
                  <tr>
                    <td class="px-6 py-4">
                      <div class="text-sm font-medium text-gray-900"><%= post.title %></div>
                      <div class="text-sm text-gray-500"><%= post.content.substring(0, 100) %>...</div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= post.username %></td>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800">
                        <%= post.category || 'General' %>
                      </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      <%= new Date(post.created_at).toLocaleDateString() %>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                      <button onclick="editPost('<%= post.news_id %>')" class="text-indigo-600 hover:text-indigo-900 mr-3">Edit</button>
                      <button onclick="deletePost('<%= post.news_id %>')" class="text-red-600 hover:text-red-900">Delete</button>
                    </td>
                  </tr>
                <% }) %>
              <% } else { %>
                <tr>
                  <td colspan="5" class="px-6 py-4 text-center text-gray-500">No posts found</td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>

      <!-- Comments Management Tab -->
      <div id="comments-content" class="tab-content p-6 hidden">
        <h2 class="text-xl font-bold text-gray-900 mb-6">Comments Management</h2>
        
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Comment</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Author</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Post</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <% if (comments && comments.length > 0) { %>
                <% comments.forEach(comment => { %>
                  <tr>
                    <td class="px-6 py-4">
                      <div class="text-sm text-gray-900"><%= comment.content.substring(0, 100) %>...</div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= comment.username %></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= comment.post_title %></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      <%= new Date(comment.created_at).toLocaleDateString() %>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                      <button onclick="deleteComment('<%= comment.comment_id %>')" class="text-red-600 hover:text-red-900">Delete</button>
                    </td>
                  </tr>
                <% }) %>
              <% } else { %>
                <tr>
                  <td colspan="5" class="px-6 py-4 text-center text-gray-500">No comments found</td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>

      <!-- Settings Tab -->
      <div id="settings-content" class="tab-content p-6 hidden">
        <h2 class="text-xl font-bold text-gray-900 mb-6">Platform Settings</h2>
        
        <div class="space-y-6">
          <div class="bg-gray-50 p-4 rounded-lg">
            <h3 class="text-lg font-semibold text-gray-900 mb-2">Database Management</h3>
            <div class="space-y-2">
              <button onclick="backupDatabase()" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg mr-2">
                Backup Database
              </button>
              <button onclick="clearCache()" class="bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-2 rounded-lg">
                Clear Cache
              </button>
            </div>
          </div>

          <div class="bg-gray-50 p-4 rounded-lg">
            <h3 class="text-lg font-semibold text-gray-900 mb-2">System Information</h3>
            <div class="text-sm text-gray-600">
              <p>Platform Version: 1.0.0</p>
              <p>Last Backup: <%= new Date().toLocaleDateString() %></p>
              <p>Server Status: Online</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Add User Modal -->
  <div id="addUserModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4">
    <div class="bg-white rounded-xl shadow-2xl max-w-md w-full">
      <div class="p-6 border-b border-gray-200">
        <div class="flex items-center justify-between">
          <h2 class="text-xl font-bold text-gray-900">Add New User</h2>
          <button onclick="closeAddUserModal()" class="text-gray-400 hover:text-gray-600">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
      </div>

      <form id="addUserForm" class="p-6">
        <div class="space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Username</label>
            <input type="text" name="username" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Email</label>
            <input type="email" name="email" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Full Name</label>
            <input type="text" name="full_name" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Password</label>
            <input type="password" name="password" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
          </div>
        </div>

        <div class="flex justify-end space-x-3 mt-6">
          <button type="button" onclick="closeAddUserModal()" class="px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50">
            Cancel
          </button>
          <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
            Add User
          </button>
        </div>
      </form>
    </div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.1/flowbite.min.js"></script>
  <script>
    // Tab Management
    function showTab(tabName) {
      // Hide all tab contents
      document.querySelectorAll('.tab-content').forEach(content => {
        content.classList.add('hidden');
      });
      
      // Remove active class from all tabs
      document.querySelectorAll('.tab-button').forEach(button => {
        button.classList.remove('active', 'border-blue-500', 'text-blue-600');
        button.classList.add('border-transparent', 'text-gray-500');
      });
      
      // Show selected tab content
      document.getElementById(tabName + '-content').classList.remove('hidden');
      
      // Add active class to selected tab
      const activeTab = document.getElementById(tabName + '-tab');
      activeTab.classList.add('active', 'border-blue-500', 'text-blue-600');
      activeTab.classList.remove('border-transparent', 'text-gray-500');
    }

    // Modal Management
    function openAddUserModal() {
      document.getElementById('addUserModal').classList.remove('hidden');
    }

    function closeAddUserModal() {
      document.getElementById('addUserModal').classList.add('hidden');
      document.getElementById('addUserForm').reset();
    }

    // User Management
    document.getElementById('addUserForm').addEventListener('submit', function(e) {
      e.preventDefault();
      
      const formData = new FormData(this);
      const userData = {};
      for (let [key, value] of formData.entries()) {
        userData[key] = value;
      }

      fetch('/admin/users/add', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(userData)
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('User added successfully!');
          closeAddUserModal();
          window.location.reload();
        } else {
          alert('Failed to add user: ' + data.message);
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Failed to add user. Please try again.');
      });
    });

    function editUser(userId) {
      // Implement edit user functionality
      alert('Edit user functionality - User ID: ' + userId);
    }

    function deleteUser(userId) {
      console.log('Delete user clicked for ID:', userId);
      
      if (confirm('Are you sure you want to delete this user?')) {
        console.log('User confirmed user deletion');
        
        fetch('/admin/users/delete/' + userId, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json'
          }
        })
        .then(response => {
          console.log('Delete user response status:', response.status);
          
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          
          return response.json();
        })
        .then(data => {
          console.log('Delete user response data:', data);
          
          if (data.success) {
            alert('User deleted successfully!');
            window.location.reload();
          } else {
            alert('Failed to delete user: ' + data.message);
          }
        })
        .catch(error => {
          console.error('Delete user error:', error);
          alert('Failed to delete user. Error: ' + error.message);
        });
      } else {
        console.log('User cancelled user deletion');
      }
    }

    function editPost(postId) {
      alert('Edit post functionality - Post ID: ' + postId);
    }

    function deletePost(postId) {
      console.log('Delete post clicked for ID:', postId);
      console.log('Encoded post ID:', encodeURIComponent(postId));
      
      if (confirm('Are you sure you want to delete this post?')) {
        console.log('User confirmed deletion');
        
        fetch('/admin/posts/delete/' + encodeURIComponent(postId), {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json'
          }
        })
        .then(response => {
          console.log('Response status:', response.status);
          console.log('Response headers:', response.headers);
          
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          
          return response.json();
        })
        .then(data => {
          console.log('Response data:', data);
          
          if (data.success) {
            alert('Post deleted successfully!');
            window.location.reload();
          } else {
            alert('Failed to delete post: ' + data.message);
          }
        })
        .catch(error => {
          console.error('Delete post error:', error);
          alert('Failed to delete post. Error: ' + error.message);
        });
      } else {
        console.log('User cancelled deletion');
      }
    }

    function deleteComment(commentId) {
      console.log('Delete comment clicked for ID:', commentId);
      console.log('Encoded comment ID:', encodeURIComponent(commentId));
      
      if (confirm('Are you sure you want to delete this comment?')) {
        console.log('User confirmed comment deletion');
        
        fetch('/admin/comments/delete/' + encodeURIComponent(commentId), {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json'
          }
        })
        .then(response => {
          console.log('Delete comment response status:', response.status);
          
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          
          return response.json();
        })
        .then(data => {
          console.log('Delete comment response data:', data);
          
          if (data.success) {
            alert('Comment deleted successfully!');
            window.location.reload();
          } else {
            alert('Failed to delete comment: ' + data.message);
          }
        })
        .catch(error => {
          console.error('Delete comment error:', error);
          alert('Failed to delete comment. Error: ' + error.message);
        });
      } else {
        console.log('User cancelled comment deletion');
      }
    }

    function deleteUser(userId) {
      console.log('Delete user clicked for ID:', userId);
      console.log('Encoded user ID:', encodeURIComponent(userId));
      
      if (confirm('Are you sure you want to delete this user? This action cannot be undone.')) {
        console.log('User confirmed user deletion');
        
        fetch('/admin/users/delete/' + encodeURIComponent(userId), {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json'
          }
        })
        .then(response => {
          console.log('Delete user response status:', response.status);
          
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          
          return response.json();
        })
        .then(data => {
          console.log('Delete user response data:', data);
          
          if (data.success) {
            alert('User deleted successfully!');
            window.location.reload();
          } else {
            alert('Failed to delete user: ' + data.message);
          }
        })
        .catch(error => {
          console.error('Delete user error:', error);
          alert('Failed to delete user. Error: ' + error.message);
        });
      } else {
        console.log('User cancelled user deletion');
      }
    }

    function editUser(userId) {
      alert('Edit user functionality - User ID: ' + userId);
    }

    function backupDatabase() {
      alert('Database backup initiated...');
    }

    function clearCache() {
      alert('Cache cleared successfully!');
    }
  </script>
</body>
</html>
